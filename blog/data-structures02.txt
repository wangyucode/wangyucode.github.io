1:"$Sreact.fragment"
2:I[47395,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js"],"default"]
3:I[52296,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js","/_next/static/chunks/7f3c6470804733fc.js","/_next/static/chunks/1004c0a689e16f66.js"],"default"]
4:I[26446,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js"],"Image"]
5:I[98951,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js"],"default"]
6:I[20588,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js"],"default"]
7:I[35910,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js"],"default"]
8:I[78142,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js"],"default"]
9:I[84240,["/_next/static/chunks/d12f64cde7c47586.js","/_next/static/chunks/2cc7ed3dfa1b294e.js"],"default"]
a:I[19320,["/_next/static/chunks/d12f64cde7c47586.js","/_next/static/chunks/2cc7ed3dfa1b294e.js"],"default"]
11:I[28011,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js"],"default"]
:HL["/_next/static/chunks/f7abb55908231aa2.css","style"]
:HL["/_next/static/chunks/83629eefef34b003.css","style"]
:HL["/_next/static/media/feb57b2dc8f29018-s.p.fc277c93.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
b:T518,M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z0:{"P":null,"b":"zdm6_EHzdMl2rCxK6ehlW","p":"","c":["","blog","data-structures02"],"i":false,"f":[[["",{"children":["blog",{"children":[["pid","data-structures02","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/f7abb55908231aa2.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/chunks/83629eefef34b003.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/b9ccaea0d93f976a.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/75fe57ca492bcc5c.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"zh-CN","className":"transition-colors duration-1000 noto_sans_sc_42b2425e-module__9CUXnq__className","children":["$","body",null,{"className":"flex flex-col items-center min-h-dvh","children":[["$","$L2",null,{"className":"fixed top-0 left-0 right-0 bottom-0 -z-10"}],["$","header",null,{"className":"navbar shadow-sm bg-base-200/60 backdrop-blur fixed z-10","children":[["$","div",null,{"className":"navbar-start","children":["$","$L3",null,{"href":"/","className":"text-xl font-bold hover:text-sky-600 flex gap-1 items-center px-2","children":[["$","$L4",null,{"src":{"src":"/_next/static/media/icon.7d834061.svg","width":192,"height":192,"blurWidth":0,"blurHeight":0},"alt":"王郁的小站","width":32,"height":32}],["$","span",null,{"className":"bg-gradient-to-br dark:bg-gradient-to-tr from-sky-600 to-pink-600 dark:from-pink-400 dark:to-sky-400 bg-clip-text text-transparent","children":"王郁的小站"}]]}]}],["$","nav",null,{"className":"navbar-center hidden lg:flex","children":["$","$L5",null,{}]}],["$","div",null,{"className":"navbar-end gap-2","children":[["$","$L6",null,{}],["$","$L7",null,{}],["$","$L8",null,{}]]}]]}],["$","main",null,{"className":"flex-1 pt-16 flex flex-col lg:flex-row gap-4 w-full overflow-auto","children":["$","$L9",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","footer",null,{"className":"w-full h-10 shadow-sm bg-base-200/60 backdrop-blur bottom-0 right-0 left-0 flex flex-col md:flex-row justify-center items-center py-2 border-t border-slate-400/30 text-xs md:text-sm","children":[["$","a",null,{"href":"https://beian.miit.gov.cn","target":"_blank","className":"md:mr-2 md:pr-2 md:border-r border-base-content hover:text-info transition-colors","children":"陕ICP备15011477号"}],["$","div",null,{"className":"flex items-center","children":[["$","p",null,{"children":"2015-2025 ©wycode.cn All Right Reserved"}],["$","a",null,{"href":"https://github.com/wangyucode/wycode-next","target":"_blank","className":"ml-2 pl-2 border-l border-base-content hover:text-info transition-colors","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","stroke":"currentColor","fill":"currentColor","viewBox":"0 0 496 512","className":"mr-2 h-4 w-4","children":["$","path",null,{"d":"$b"}]}]}]]}]]}],"$Lc"]}]}]]}],{"children":["blog","$Ld",{"children":[["pid","data-structures02","d"],"$Le",{"children":["__PAGE__","$Lf",{},null,false]},null,false]},null,false]},null,false],"$L10",false]],"m":"$undefined","G":["$11",["$L12","$L13"]],"s":false,"S":true}
14:I[97287,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js"],"default"]
16:I[84652,["/_next/static/chunks/d12f64cde7c47586.js","/_next/static/chunks/2cc7ed3dfa1b294e.js"],"OutletBoundary"]
18:I[83670,["/_next/static/chunks/d12f64cde7c47586.js","/_next/static/chunks/2cc7ed3dfa1b294e.js"],"AsyncMetadataOutlet"]
1a:I[84652,["/_next/static/chunks/d12f64cde7c47586.js","/_next/static/chunks/2cc7ed3dfa1b294e.js"],"ViewportBoundary"]
1c:I[84652,["/_next/static/chunks/d12f64cde7c47586.js","/_next/static/chunks/2cc7ed3dfa1b294e.js"],"MetadataBoundary"]
1d:"$Sreact.suspense"
c:["$","$L14",null,{}]
d:["$","$1","c",{"children":[null,["$","$L9",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
e:["$","$1","c",{"children":[null,["$","$L9",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
f:["$","$1","c",{"children":["$L15",[["$","script","script-0",{"src":"/_next/static/chunks/7f3c6470804733fc.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/1004c0a689e16f66.js","async":true,"nonce":"$undefined"}]],["$","$L16",null,{"children":["$L17",["$","$L18",null,{"promise":"$@19"}]]}]]}]
10:["$","$1","h",{"children":[null,[["$","$L1a",null,{"children":"$L1b"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$L1c",null,{"children":["$","div",null,{"hidden":true,"children":["$","$1d",null,{"fallback":null,"children":"$L1e"}]}]}]]}]
12:["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/f7abb55908231aa2.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
13:["$","link","1",{"rel":"stylesheet","href":"/_next/static/chunks/83629eefef34b003.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
1f:Td9c5,<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">import</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> java</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">util</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">Stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">public</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> class</span><span style="color:light-dark(#2E8F82, #5DA994);--shiki-light:#2E8F82;--shiki-dark:#5DA994"> Test05</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    public</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> void</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> main</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">String</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[]</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> args</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        String</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">2*(6/3+4)-5</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">        System</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">out</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">println</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">中缀表达式：</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">+</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> covert</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">        System</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">out</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">println</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">转换为后缀表达式：</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">+</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> i</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> calculate</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">        System</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">out</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">println</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">计算后缀表达式：</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">+</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">i</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    private</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> int</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> calculate</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">String </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        Stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">Integer</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">></span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> Stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;>();</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        for</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">char</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> c</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> :</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">toCharArray</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">())</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //从左到右遍历，如果是数字压入堆栈，如果是操作符，从堆栈中pop出两个数字计算，并将结果压入堆栈</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">            if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">+</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">push</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">()</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> +</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">());</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">else</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">*</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">push</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">()</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> *</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">());</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">else</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">-</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">                int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> b</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">                int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> a</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">push</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">a </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">-</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> b</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">else</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">/</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">){</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">                int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> b</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">                int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> a</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">push</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">a </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">/</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> b</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">{</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">push</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">Character</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">getNumericValue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">));</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        return</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //循环结束时，栈顶的数字就是后缀表达式结果</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    private</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> String </span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">covert</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">String </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        StringBuilder</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> StringBuilder</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        Stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">Character</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">></span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> Stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;>();</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        for</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">char</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> c</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> :</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> s</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">toCharArray</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">())</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">            if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">>=</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">0</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> &#x26;&#x26;</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> c </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">&#x3C;=</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">9</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //如果是数字直接输出</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">append</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //如果是左括号，压入操作堆栈</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">push</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">)</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //如果是右括号</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">true</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //寻找左括号</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                    c </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                    if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //找到直接结束循环</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                        break</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                    }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //不是左括号直接输出操作符</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                        sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">append</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                    }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //如果是+ - * /</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">true</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">  //寻找栈顶比当前操作优先级低的操作符</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                    if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">isEmpty</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">())</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //如果是空栈，直接压入操作符</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                        stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">push</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                        break</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                    }</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">                    char</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> cInStack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">peek</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                    if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">isStackPriority</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">cInStack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">,</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">))</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //如果栈顶操作符优先级高或相同，直接出栈并输出</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                        sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">append</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">());</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                    }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                        stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">push</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //找到优先级低的地方，把当前操作符push进去</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                        break</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                    }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">            //System.out.println(stack.size());</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">isEmpty</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">()){</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //最后将栈里的操作符全部输出</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">append</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">());</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        return</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">toString</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    private</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> boolean</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> isStackPriority</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">char</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> cInStack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">,</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> char</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> c2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        return</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> cInStack </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> &#x26;&#x26;</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">cInStack </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">*</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> ||</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> cInStack </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">/</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> ||</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> c2 </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">*</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> &#x26;&#x26;</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> c2 </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">/</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">}</span></span>
<span class="line"></span></code></pre>15:["$","div",null,{"className":"container mx-auto w-full p-4","children":[["$","article",null,{"className":"card shadow bg-base-100 p-4 mb-4","children":[["$","h1",null,{"className":"text-2xl text-slate-800 dark:text-slate-200 font-extrabold text-center","children":"数据结构与算法学习笔记02"}],["$","div",null,{"className":"flex justify-between text-sm mb-4 flex-wrap gap-2","children":[["$","span",null,{"className":"flex items-center","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","aria-hidden":"true","data-slot":"icon","ref":"$undefined","aria-labelledby":"$undefined","className":"inline mr-1 h-5","children":[null,["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5"}]]}],"2018-03-16"]}],["$","$L3",null,{"href":"/blog/category/computer-science","className":"flex items-center px-3 py-1 bg-green-50 hover:bg-green-100 dark:bg-green-900/30 dark:hover:bg-green-900/50 text-sm rounded-full","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","aria-hidden":"true","data-slot":"icon","ref":"$undefined","aria-labelledby":"$undefined","className":"inline mr-1 h-4 mb-0.5","children":[null,["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"m20.25 7.5-.625 10.632a2.25 2.25 0 0 1-2.247 2.118H6.622a2.25 2.25 0 0 1-2.247-2.118L3.75 7.5M10 11.25h4M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125Z"}]]}],"Computer Science"]}]]}],["$","div",null,{"className":"flex items-center gap-2 mb-4","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","aria-hidden":"true","data-slot":"icon","ref":"$undefined","aria-labelledby":"$undefined","className":"inline h-5","children":[null,["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"M9.568 3H5.25A2.25 2.25 0 0 0 3 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 0 0 5.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 0 0 9.568 3Z"}],["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"M6 6h.008v.008H6V6Z"}]]}],["$","div",null,{"className":"flex flex-wrap gap-1","children":[["$","$L3","C",{"href":"/blog/tag/c","className":"px-2 bg-pink-50 hover:bg-pink-100 dark:bg-pink-900/30 dark:hover:bg-pink-900/50 text-sm rounded-full","children":"C"}]]}]]}],["$","div",null,{"className":"mt-4","children":["$","div",null,{"className":"prose max-w-full","children":[["$","figure","img-0",{"className":"flex flex-col items-center","children":[["$","img",null,{"src":"https://www.smpg888.com/resource/images/19b3b5c5671f44a4b9f4320dd8fcc734_34.jpg","alt":"浙江大学","node":{"type":"element","tagName":"img","properties":{"src":"https://www.smpg888.com/resource/images/19b3b5c5671f44a4b9f4320dd8fcc734_34.jpg","alt":"浙江大学"},"children":[],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":89,"offset":89}}},"className":"mx-auto max-h-64 max-w-72"}],["$","figcaption",null,{"className":"text-sm text-gray-500 dark:text-gray-400 mt-1","children":"浙江大学"}]]}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":"线性结构的基础是数组和链表，由数组和链表可以扩展出堆栈和队列。"}],"\n"]}],"\n","<!--more-->","\n",["$","h2","h2-0",{"children":"实验1：计算表达式的值"}],"\n",["$","p","p-0",{"children":"将中缀表达式转换为后缀表达式，并计算表达式的值。"}],"\n",["$","ul","ul-0",{"children":["\n",["$","li","li-0",{"children":"实现："}],"\n"]}],"\n",["$","div","pre-0",{"dangerouslySetInnerHTML":{"__html":"$1f"}}],"\n","$L20","\n","$L21","\n","$L22","\n","$L23","\n","$L24","\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35","\n","$L36","\n","$L37","\n","$L38","\n","$L39","\n","$L3a","\n","$L3b","\n","$L3c","\n","$L3d","\n","$L3e","\n","$L3f","\n","$L40","\n","$L41","\n","$L42","\n","$L43","\n","$L44","\n","$L45","\n","$L46","\n","$L47","\n","$L48","\n","$L49","\n","$L4a","\n","$L4b"]}]}]]}],"$L4c","$L4d","$L4e"]}]
56:I[49558,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js","/_next/static/chunks/7f3c6470804733fc.js","/_next/static/chunks/1004c0a689e16f66.js"],"AdSenseCard"]
57:I[9725,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js","/_next/static/chunks/7f3c6470804733fc.js","/_next/static/chunks/1004c0a689e16f66.js"],"default"]
58:I[89864,["/_next/static/chunks/b9ccaea0d93f976a.js","/_next/static/chunks/75fe57ca492bcc5c.js","/_next/static/chunks/7f3c6470804733fc.js","/_next/static/chunks/1004c0a689e16f66.js"],"default"]
20:["$","ul","ul-1",{"children":["\n",["$","li","li-0",{"children":"输出："}],"\n"]}]
21:["$","div","pre-1",{"dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665\">中缀表达式：2*(6/3+4</span><span style=\"color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">)-5</span></span>\n<span class=\"line\"><span style=\"color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665\">转换为后缀表达式：263/4+*5-</span></span>\n<span class=\"line\"><span style=\"color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665\">计算后缀表达式：7</span></span>\n<span class=\"line\"></span></code></pre>"}}]
22:["$","ul","ul-2",{"children":["\n",["$","li","li-0",{"children":"总结:"}],"\n"]}]
23:["$","ol","ol-0",{"children":["\n",["$","li","li-0",{"children":"利用堆栈可以很优雅的解决表达式运算的问题"}],"\n",["$","li","li-1",{"children":"以上程序有3个缺陷：不能计算小数；不能计算负数；只能计算个位数的运算"}],"\n",["$","li","li-2",{"children":"改进方向：使用浮点型计算；后缀转换时要添加对于多位数、小数、负数的处理；将结果直接保存到堆栈里，堆栈内保存数字和操作符"}],"\n"]}]
24:["$","h2","h2-1",{"children":"作业1：一元多项式的乘法与加法运算（20 分）"}]
25:["$","p","p-1",{"children":"设计函数分别求两个一元多项式的乘积与和。"}]
26:["$","p","p-2",{"children":"输入格式:"}]
27:["$","p","p-3",{"children":"输入分2行，每行分别先给出多项式非零项的个数，再以指数递降方式输入一个多项式非零项系数和指数（绝对值均为不超过1000的整数）。数字间以空格分隔。"}]
28:["$","p","p-4",{"children":"输出格式:"}]
29:["$","p","p-5",{"children":"输出分2行，分别以指数递降方式输出乘积多项式以及和多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。零多项式应输出0 0。"}]
2a:["$","p","p-6",{"children":"输入样例:"}]
4f:Ta18,<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91">  6</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076">  -2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 20</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076">  -7</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91">  3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span></span>
<span class="line"></span></code></pre>2b:["$","div","pre-2",{"dangerouslySetInnerHTML":{"__html":"$4f"}}]
2c:["$","p","p-7",{"children":"输出样例:"}]
50:Te1a,<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">15</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 24</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -25</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 22</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 30</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 21</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -10</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 20</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -21</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 8</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 35</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 6</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -33</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 14</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -15</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 18</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -6</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 20</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -4</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 9</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span></span>
<span class="line"></span></code></pre>2d:["$","div","pre-3",{"dangerouslySetInnerHTML":{"__html":"$50"}}]
2e:["$","ul","ul-3",{"children":["\n",["$","li","li-0",{"children":"实现："}],"\n"]}]
51:T1b141,<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">public</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> class</span><span style="color:light-dark(#2E8F82, #5DA994);--shiki-light:#2E8F82;--shiki-dark:#5DA994"> Main</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    public</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> void</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> main</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">String</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[]</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> args</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        Scanner</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> scanner</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> Scanner</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">System</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">in</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> getInput</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">scanner</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> getInput</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">scanner</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> result1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> add</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">first1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">,</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> result2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> multiply</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">first1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">,</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">        print</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">result2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">        print</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">result1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">    /**</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">     * 逐项插入算法</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">     *</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">     * </span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">@param</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first1</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">     * </span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">@param</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first2</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">     * </span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">@return</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">     */</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    private</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> PolyNode </span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">multiply</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">PolyNode </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">first1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">,</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> PolyNode </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">first2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //结果，先构造一个空的头节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //将尾部指向这个头</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">p2 </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //先用第一项乘以p2构造一个初始多项式</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //构造一个新节点</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> *</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //系数相乘</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> +</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //指数相加</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //尾部指针指向新的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            rear </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //新尾部等于新添加的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            p2 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //移动p2指针</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        p1 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //把p1指针向后挪1位</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">p1 </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            p2 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //将p2指针归位</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            rear </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //尾部指针归位</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">            while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">p2 </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">                int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> e</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> +</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //指数相加</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">                int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> *</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //系数相乘</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> !=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> &#x26;&#x26;</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> ></span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> e</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //寻找比当前指数小或者等的位置</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                    rear </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //rear 往后挪</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                }</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> !=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> &#x26;&#x26;</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> ==</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> e</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //挪了之后如果下一项存在，且指数相等，则合并系数</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                    if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> +</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> c </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //和下一项系数相加等于0，则删掉这一项</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                        rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                    }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //系数相加不为0，就要合并系数</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                        rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> +=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                    }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //指数不等，需要创建一个新节点插入</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                    PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> newPoly</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //构造一个新节点</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                    newPoly</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> c</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                    newPoly</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> e</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                    newPoly</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">//新插入的节点下一个=当前尾部的下一个</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                    rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> newPoly</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //当前尾部的下一个等于新节点</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                p2 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">//p2处理完毕，将p2挪到下一个</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            p1 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">//p2遍历完毕，将p1往后挪</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        first </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //将头部挪到真实的头部位置，Java会自动回收没有引用的头节点</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        return</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    private</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> void</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> print</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">PolyNode </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">result</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> result</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        StringBuilder</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> StringBuilder</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">p </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //零多项式输出0 0</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">append</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">0 0</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        boolean</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> isFirst</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> true</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">p </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">            if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">isFirst</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">append</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">append</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">p</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">append</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">'</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> '</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">append</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">p</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            p </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            isFirst </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> false</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">        System</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">out</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">println</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">sb</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">toString</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">());</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    private</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> PolyNode </span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">add</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">PolyNode </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">first1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">,</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> PolyNode </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">first2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //结果，先构造一个空的头节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //将尾部指向这个头</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">p1 </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> &#x26;&#x26;</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> p2 </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //当两个指针都不为空时</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">            if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> ==</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //系数为0,直接省略</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                p1 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> ==</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                p2 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> ==</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //指数相等，则系数相加后串到后面</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">                int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> +</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">  //系数相加</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">coef </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                    PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //构造一个新节点</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                    next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                    next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                    rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //尾部指针指向新的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                    rear </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //新尾部等于新添加的节点</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                }</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                p1 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //移动指针</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                p2 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> ></span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">//指数大的串到后面</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //构造一个新节点</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //尾部指针指向新的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                rear </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //新尾部等于新添加的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                p1 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //移动指针</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //构造一个新节点</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //尾部指针指向新的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                rear </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //新尾部等于新添加的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                p2 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //移动指针</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">p1 </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //p1没完，把所有p1追加到后面</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">            if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> !=</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //系数不为0才，添加，否则继续找因为后面可以能还有系数不为0的</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //构造一个新节点</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //尾部指针指向新的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                rear </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //新尾部等于新添加的节点</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            p1 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //移动指针</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">p2 </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!=</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> &#x26;&#x26;</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> !=</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //p2没完，把所有p2追加到后面</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">            if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> !=</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //系数不为0才，添加，否则继续找因为后面可以能还有系数不为0的</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //构造一个新节点</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //尾部指针指向新的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                rear </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //新尾部等于新添加的节点</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            p2 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> p2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //移动指针</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        first </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //将头部挪到真实的头部位置，Java会自动回收没有引用的头节点</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        return</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    private</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> PolyNode </span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">getInput</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">Scanner </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">scanner</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> count</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> scanner</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">nextInt</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //得到总项数</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //构造一个空的头</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //构造一个尾部的指针</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">count </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">></span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //读取一个节点</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> scanner</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">nextInt</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> scanner</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">nextInt</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            rear</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //将尾部的指针指向读到的这个节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            rear </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //将尾部指针挪到新添加的节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            count</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">--</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //循环</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        first </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //将头部挪到真实的头部位置，Java会自动回收没有引用的头节点</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        return</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> first</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> class</span><span style="color:light-dark(#2E8F82, #5DA994);--shiki-light:#2E8F82;--shiki-dark:#5DA994"> PolyNode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> coef</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> expon</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        PolyNode</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> next</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre>2f:["$","div","pre-4",{"dangerouslySetInnerHTML":{"__html":"$51"}}]
30:["$","ul","ul-4",{"children":["\n",["$","li","li-0",{"children":"总结："}],"\n"]}]
31:["$","ol","ol-1",{"children":["\n",["$","li","li-0",{"children":"逐项插值算法；"}],"\n",["$","li","li-1",{"children":"单个对象保存一个当前类的引用可以当作链表来使用；"}],"\n",["$","li","li-2",{"children":"原输入的链表不要取修改它的内部对象引用或者变量值；"}],"\n"]}]
32:["$","h2","h2-2",{"children":"作业1：Reversing Linked List（25 分）"}]
33:["$","p","p-8",{"children":"Given a constant K and a singly linked list L, you are supposed to reverse the links of every K elements on L. For example, given L being 1→2→3→4→5→6, if K=3, then you must output 3→2→1→6→5→4; if K=4, you must output 4→3→2→1→5→6."}]
34:["$","p","p-9",{"children":"Input Specification:"}]
35:["$","p","p-10",{"children":"Each input file contains one test case. For each case, the first line contains the address of the first node, a positive N (≤10\n​5\n​​ ) which is the total number of nodes, and a positive K (≤N) which is the length of the sublist to be reversed. The address of a node is a 5-digit nonnegative integer, and NULL is represented by -1."}]
36:["$","p","p-11",{"children":"Then N lines follow, each describes a node in the format:"}]
37:["$","p","p-12",{"children":[["$","code","code-0",{"children":"Address Data Next"}],"\nwhere ",["$","code","code-1",{"children":"Address"}]," is the position of the node, ",["$","code","code-2",{"children":"Data"}]," is an integer, and ",["$","code","code-3",{"children":"Next"}]," is the position of the next node."]}]
38:["$","p","p-13",{"children":"Output Specification:"}]
39:["$","p","p-14",{"children":"For each case, output the resulting ordered linked list. Each node occupies a line, and is printed in the same format as in the input."}]
3a:["$","p","p-15",{"children":"Sample Input:"}]
52:Td00,<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">00100</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 8</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">00000</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 99999</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">00100</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 12309</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">68237</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 6</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 77777</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">33218</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 00000</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">77777</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 7</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 88888</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">99999</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 68237</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">12309</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 33218</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">88888</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 8</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -1</span></span>
<span class="line"></span></code></pre>3b:["$","div","pre-5",{"dangerouslySetInnerHTML":{"__html":"$52"}}]
3c:["$","p","p-16",{"children":"Sample Output:"}]
53:T911,<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">00000</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 33218</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">33218</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 12309</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">12309</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 00100</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">00100</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 99999</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">99999</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 68237</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">68237</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 6</span><span style="color:light-dark(#A65E2B, #C99076);--shiki-light:#A65E2B;--shiki-dark:#C99076"> -1</span></span>
<span class="line"></span></code></pre>3d:["$","div","pre-6",{"dangerouslySetInnerHTML":{"__html":"$53"}}]
3e:["$","ul","ul-5",{"children":["\n",["$","li","li-0",{"children":"实现："}],"\n"]}]
54:Tef2f,<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">package</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> cn</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">wycode</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">import</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> java</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">io</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">BufferedReader</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">import</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> java</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">io</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">InputStreamReader</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">import</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> java</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">util</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">ArrayList</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">import</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> java</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">util</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">LinkedList</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">import</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> java</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">util</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">Objects</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">import</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> java</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">util</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">Stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">public</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> class</span><span style="color:light-dark(#2E8F82, #5DA994);--shiki-light:#2E8F82;--shiki-dark:#5DA994"> Main</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    public</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> void</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> main</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">String </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[])</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        BufferedReader</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> reader</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> BufferedReader</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> InputStreamReader</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">System</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">in</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">));</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">        //读第一行</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        String</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[]</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> line1Array</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> getStringArray</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">reader</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        String</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> firstAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> line1Array</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91">0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">];</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> count</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> Integer</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">parseInt</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">line1Array</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91">1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">]);</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> k</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> Integer</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">parseInt</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">line1Array</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91">2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">        //读取所有节点</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        ArrayList</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">Node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">></span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> nodes</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> ArrayList</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;>(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">count</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        for</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> i</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> i </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">&#x3C;</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> count</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> i</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">++</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">            String</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[]</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> lineArray</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> getStringArray</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">reader</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            Node</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> Node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">address</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> lineArray</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91">0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">];</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">data</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> Integer</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">parseInt</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">lineArray</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91">1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">]);</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">nextAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> lineArray</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91">2</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">];</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">            nodes</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">add</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">        //按链表顺序加入队列</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        LinkedList</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">Node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">></span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> queue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> LinkedList</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;>();</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        String</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> address</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> firstAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">address</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">equals</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">-1</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">))</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">            for</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> i</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 0</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> i </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">&#x3C;</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> nodes</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">size</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> i</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">++</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //循环匹配地址</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                Node</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> nodes</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">get</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">i</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">Objects</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">equals</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">address</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">,</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">address</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">))</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //找到则加入队列</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                    queue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">add</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                    address </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">nextAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //查找地址赋值为当前节点的下一个地址</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                    nodes</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">remove</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //处理完的移出节点数组，减少循环量</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                    break</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        Stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">Node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">></span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> new</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> Stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">&#x3C;>();</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        boolean</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> isCanConvert</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> queue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">size</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">()</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> >=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> k</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //是否够反转</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">queue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">isEmpty</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">())</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //循环出队列</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            Node</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> queue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">remove</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">            if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">isCanConvert</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //够反转则压入堆栈</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">push</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">size</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">()</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> ==</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> k</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //压够反转数量就全部输出</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                    isCanConvert </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> queue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">size</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">()</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> >=</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE"> k</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //再次检查是否够反转</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                    while</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">!</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">isEmpty</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">())</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">                        //重新赋值next</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">                        Node</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> nStack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">pop</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                        if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">isEmpty</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">())</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //如果栈里没了，地址就等于队列的下一个</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                            if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">queue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">isEmpty</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">())</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //队列也没了，地址等于-1</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                                nStack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">nextAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:light-dark(#B56959, #C98A7D);--shiki-light:#B56959;--shiki-dark:#C98A7D">-1</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD">                                //如果剩下的还能反转</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">                                if</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">isCanConvert</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                                    nStack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">nextAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> queue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">get</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">k </span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">-</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">).</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">address</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                                }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                                    nStack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">nextAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> queue</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">peek</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">().</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">address</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                                }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                            }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                        }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">                            nStack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">nextAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> stack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">peek</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">().</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">address</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                        }</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">                        print</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">nStack</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                    }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">                }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> else</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span><span style="color:light-dark(#A0ADA0, #758575DD);--shiki-light:#A0ADA0;--shiki-dark:#758575DD"> //不够反转 直接输出节点</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">                print</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">            }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    private</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> void</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> print</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">Node </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">        System</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">out</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">println</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">address</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> +</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> +</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">data</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> +</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> +</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> n</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">nextAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    private</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> String</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">[]</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665"> getStringArray</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">BufferedReader </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">reader</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        String</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> line1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> =</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> null</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        try</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">            line1 </span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">=</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> reader</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">readLine</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">();</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375"> catch</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> (</span><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">Exception </span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A">ignore</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">)</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">        }</span></span>
<span class="line"><span style="color:light-dark(#1E754F, #4D9375);--shiki-light:#1E754F;--shiki-dark:#4D9375">        return</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> line1</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">.</span><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">split</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">(</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:light-dark(#B5695977, #C98A7D77);--shiki-light:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">    static</span><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676"> class</span><span style="color:light-dark(#2E8F82, #5DA994);--shiki-light:#2E8F82;--shiki-dark:#5DA994"> Node</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666"> {</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        String</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> address</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#AB5959, #CB7676);--shiki-light:#AB5959;--shiki-dark:#CB7676">        int</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> data</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#393A34, #DBD7CAEE);--shiki-light:#393A34;--shiki-dark:#DBD7CAEE">        String</span><span style="color:light-dark(#B07D48, #BD976A);--shiki-light:#B07D48;--shiki-dark:#BD976A"> nextAddress</span><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">    }</span></span>
<span class="line"><span style="color:light-dark(#999999, #666666);--shiki-light:#999999;--shiki-dark:#666666">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre>3f:["$","div","pre-7",{"dangerouslySetInnerHTML":{"__html":"$54"}}]
40:["$","ul","ul-6",{"children":["\n",["$","li","li-0",{"children":"总结："}],"\n"]}]
41:["$","ol","ol-2",{"children":["\n",["$","li","li-0",{"children":"利用队列和栈解决顺序问题"}],"\n"]}]
42:["$","h2","h2-3",{"children":"作业2：Pop Sequence（25 分）"}]
43:["$","p","p-17",{"children":"Given a stack which can keep M numbers at most. Push N numbers in the order of 1, 2, 3, ..., N and pop randomly. You are supposed to tell if a given sequence of numbers is a possible pop sequence of the stack. For example, if M is 5 and N is 7, we can obtain 1, 2, 3, 4, 5, 6, 7 from the stack, but not 3, 2, 1, 7, 5, 6, 4."}]
44:["$","p","p-18",{"children":"Input Specification:"}]
45:["$","p","p-19",{"children":"Each input file contains one test case. For each case, the first line contains 3 numbers (all no more than 1000): M (the maximum capacity of the stack), N (the length of push sequence), and K (the number of pop sequences to be checked). Then K lines follow, each contains a pop sequence of N numbers. All the numbers in a line are separated by a space."}]
46:["$","p","p-20",{"children":"Output Specification:"}]
47:["$","p","p-21",{"children":"For each pop sequence, print in one line \"YES\" if it is indeed a possible pop sequence of the stack, or \"NO\" if not."}]
48:["$","p","p-22",{"children":"Sample Input:"}]
55:T10c8,<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 7</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 5</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">1</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 6</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 7</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 7</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 6</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">7</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 6</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 6</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 7</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 1</span></span>
<span class="line"><span style="color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665">1</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 7</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 6</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 5</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 4</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:light-dark(#2F798A, #4C9A91);--shiki-light:#2F798A;--shiki-dark:#4C9A91"> 2</span></span>
<span class="line"></span></code></pre>49:["$","div","pre-8",{"dangerouslySetInnerHTML":{"__html":"$55"}}]
4a:["$","p","p-23",{"children":"Sample Output:"}]
4b:["$","div","pre-9",{"dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:light-dark(#ffffff, #121212);--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;color:light-dark(#393a34, #dbd7caee);--shiki-light:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665\">YES</span></span>\n<span class=\"line\"><span style=\"color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665\">NO</span></span>\n<span class=\"line\"><span style=\"color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665\">NO</span></span>\n<span class=\"line\"><span style=\"color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665\">YES</span></span>\n<span class=\"line\"><span style=\"color:light-dark(#59873A, #80A665);--shiki-light:#59873A;--shiki-dark:#80A665\">NO</span></span>\n<span class=\"line\"></span></code></pre>"}}]
4c:["$","$L56",null,{}]
4d:["$","$L57",null,{}]
4e:["$","$L58",null,{"postId":"data-structures02"}]
1b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
17:null
59:I[29406,["/_next/static/chunks/d12f64cde7c47586.js","/_next/static/chunks/2cc7ed3dfa1b294e.js"],"IconMark"]
19:{"metadata":[["$","title","0",{"children":"数据结构与算法学习笔记02 | 王郁的小站"}],["$","meta","1",{"name":"description","content":"\n![浙江大学](https://www.smpg888.com/resource/images/19b3b5c5671f44a4b9f4320dd8fcc734_34.jpg)\n\n> 线性结构的基础是数组和链表，由数组和链表可以扩展出堆栈和队列。\n\n\n"}],["$","meta","2",{"name":"generator","content":"Next.js"}],["$","meta","3",{"name":"keywords","content":"C"}],["$","meta","4",{"name":"creator","content":"王郁"}],["$","link","5",{"rel":"icon","href":"/favicon.ico?favicon.fe33cc56.ico","sizes":"48x48","type":"image/x-icon"}],["$","link","6",{"rel":"icon","href":"/icon.svg?icon.7d834061.svg","sizes":"any","type":"image/svg+xml"}],["$","$L59","7",{}]],"error":null,"digest":"$undefined"}
1e:"$19:metadata"
